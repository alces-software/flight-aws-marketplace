{
    "Description": "Launch an Alces HPC environment with a single SGE master node together with 8 initial compute nodes using EC2 spot.",
    "Parameters": {
        "KeyPair": {
            "Description": "Choose an existing AWS key for administrator access",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "Username": {
              "Description": "Enter a username - this is used for the cluster administrator account",
              "Type": "String",
              "Default": "alces",
              "MaxLength": "16",
              "MinLength": "1",
              "AllowedPattern": "[-a-z0-9]*",
              "ConstraintDescription": "Enter a username between 1 and 16 characters using a-z, 1 to 9 and -"

        },
        "SpotPrice": {
            "Description": "Enter your maximum bid per hour for each compute instance. View the Spot Request calculator for information on spot pricing.",
            "Type": "String",
            "Default": "0.50"
        },
        "SystemDiskSize": {
            "Description": "Select the size in GB of root system disk to use for all deployed nodes in the environment",
            "Type": "String",
            "Default": "500"
        },
        "LoginType": {
            "Description": "Select the login node instance type to deploy - this defines the number of cores and memory available",
            "Type": "String",
            "Default": "t2.large",
            "AllowedValues": [
                "t2.large",
                "c3.large",
                "c4.large"
            ]
        },
        "NetworkCIDR": {
            "Description": "Enter an address range that is permitted to access the Clusterware master node. Leave blank if unknown",
            "Type": "String",
            "Default": "0.0.0.0/0",
            "AllowedPattern": "[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}/[0-9]{1,2}",
            "ConstraintDescription": "Please specify a valid IP range, e.g. 101.21.2.0/16"
        }
    },
    "Mappings": {
        "AWSRegionArch2AMI": {
            "eu-west-1": {
                "centos7": "ami-b532b3c6"
            }
        },
        "LoginType2SystemDisk": {
            "t2.large": {
                "rootdisk": "8"
              },
              "c3.large": {
                "rootdisk": "100"
              },
              "c4.large": {
                "rootdisk": "100"
              }
        }
    },
    "Resources": {
        "FlightVPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    }
                ],
                "CidrBlock": "10.75.0.0/16",
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true"
            }
        },
        "FlightRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "DependsOn": "FlightVPC",
            "Properties": {
                "VpcId": {
                    "Ref": "FlightVPC"
                },
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackId"
                        }
                    }
                ]
            }
        },
        "FlightSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "FlightVPC"
                },
                "CidrBlock": "10.75.0.0/24",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join": [ "", [ {"Ref": "AWS::StackName"}, "-subnet" ] ]}
                    }
                ]
            }
        },
        "FlightGW": {
            "Type": "AWS::EC2::InternetGateway",
            "DependsOn": "FlightVPC"
        },
        "FlightGWAttach": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "DependsOn": "FlightVPC",
            "Properties": {
                "VpcId": {
                    "Ref": "FlightVPC"
                },
                "InternetGatewayId": {
                    "Ref": "FlightGW"
                }
            }
        },
        "FlightRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "FlightGWAttach",
            "Properties": {
                "RouteTableId": {
                    "Ref": "FlightRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "FlightGW"
                }
            }
        },
        "SubnetToRouteTable": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "DependsOn": "FlightRouteTable",
            "Properties": {
                "SubnetId": {
                    "Ref": "FlightSubnet"
                },
                "RouteTableId": {
                    "Ref": "FlightRouteTable"
                }
            }
        },
        "FlightSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    }
                ],
                "GroupDescription": "Enable SSH access to the Alces Clusterware master node",
                "VpcId": {
                    "Ref": "FlightVPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "-1",
                        "FromPort": "0",
                        "ToPort": "65535",
                        "CidrIp": "10.75.0.0/24"
                    },
                    {
                        "IpProtocol": "6",
                        "FromPort": "5900",
                        "ToPort": "5920",
                        "CidrIp": {
			                     "Ref": "NetworkCIDR"
                        }
                    },
                    {
                        "IpProtocol": "6",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "NetworkCIDR"
                        }
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "-1",
                        "FromPort": "0",
                        "ToPort": "65535",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "MasterIAM": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Statement": [ {
                "Effect": "Allow",
                "Principal": {
                  "Service": [
                    "ec2.amazonaws.com"
                  ]
                },
                "Action": [
                  "sts:AssumeRole"
                ]
                }]
            }
          }
        },
        "MasterIAMProfile": {
          "Type": "AWS::IAM::InstanceProfile",
          "Properties": {
            "Path": "/",
            "Roles": [
              { "Ref": "MasterIAM"
              }
            ]
          }
        },
        "MetricData": {
          "Type": "AWS::IAM::Policy",
          "Properties": {
            "PolicyName": "MetricData",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [ {
                "Effect": "Allow",
                "Action": [
                  "cloudwatch:PutMetricData",
                  "autoscaling:DescribeAutoScalingGroups",
                  "autoscaling:SetDesiredCapacity",
                  "autoscaling:UpdateAutoScalingGroup"
                ],
                "Resource": [
                  "*"
                ]
                }]
            },
            "Roles": [ { "Ref": "MasterIAM" } ]
          }
        },
        "FlightLogin": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": "FlightGWAttach",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join": [ "", [ {"Ref": "AWS::StackName"}, "-login1" ] ]}
                    }
                ],
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSRegionArch2AMI",
                        {
                            "Ref": "AWS::Region"
                        },
                        "centos7"
                    ]
                },
                "NetworkInterfaces": [
                    {
                        "AssociatePublicIpAddress": "True",
                        "DeviceIndex": "0",
                        "GroupSet": [
                          {
                              "Ref": "FlightSG"
                          }
                        ],
                        "SubnetId": {
                              "Ref": "FlightSubnet"
                        }
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": { "Fn::FindInMap": [ "LoginType2SystemDisk", { "Ref": "LoginType" }, "rootdisk"] }
                        }
                    },
                    {
                        "DeviceName": "/dev/xvdb",
                        "VirtualName": "ephemeral0"
                    },
                    {
                        "DeviceName": "/dev/xvdc",
                        "VirtualName": "ephemeral1"
                    }
                ],
                "InstanceType": { "Ref": "LoginType" },
                "KeyName": {
                    "Ref": "KeyPair"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#cloud-config",
                                "\n",
                                "system_info:",
                                "\n",
                                "  default_user:",
                                "\n",
                                "    name: ",
                                { "Ref": "Username" },
                                "\n",
                                "hostname: login1",
                                "\n",
                                "write_files:",
                                "\n",
                                "- content: |",
                                "\n",
                                "    cluster:",
                                "\n",
                                "      uuid: '11111111-2222-3333-444444444444'",
                                "\n",
                                "      token: '1A0a1aaAA1aAAA/aaa1aAA=='",
                                "\n",
                                "      name: ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "\n",
                                "      role: 'master'",
                                "\n",
                                "      tags:",
                                "\n",
                                "        scheduler_roles: ':master:'",
                                "\n",
                                "        storage_roles: ':master:'",
                                "\n",
                                "        access_roles: ':master:'",
                                "\n",
                                "  owner: root:root",
                                "\n",
                                "  path: /opt/clusterware/etc/config.yml",
                                "\n",
                                "  permissions: '0640'"
                            ]
                        ]
                    }
                }
            }
        },
        "ComputeConfig": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "AssociatePublicIpAddress": "True",
                "KeyName": {
                    "Ref": "KeyPair"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSRegionArch2AMI",
                        {
                            "Ref": "AWS::Region"
                        },
                        "centos7"
                    ]
                },
                "IamInstanceProfile": {
                  "Ref": "MasterIAMProfile"
                },
                "InstanceType": "c4.large",
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": { "Ref": "SystemDiskSize" }
                        }
                    }
                ],
                "SpotPrice": {
                    "Ref": "SpotPrice"
                },
                "SecurityGroups": [
                    {
                        "Ref": "FlightSG"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#cloud-config",
                                "\n",
                                "system_info:",
                                "\n",
                                "  default_user:",
                                "\n",
                                "    name: ",
                                { "Ref": "Username" },
                                "\n",
                                "write_files:",
                                "\n",
                                "- content: |",
                                "\n",
                                "    cluster:",
                                "\n",
                                "      uuid: '11111111-2222-3333-444444444444'",
                                "\n",
                                "      token: '1A0a1aaAA1aAAA/aaa1aAA=='",
                                "\n",
                                "      name: ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "\n",
                                "      role: 'slave'",
                                "\n",
                                "      master: ",
                                {
                                    "Fn::GetAtt": [
                                        "FlightLogin",
                                        "PrivateIp"
                                    ]
                                },
                                "\n",
                                "      tags:",
                                "\n",
                                "        scheduler_roles: ':compute:'",
                                "\n",
                                "  owner: root:root",
                                "\n",
                                "  path: /opt/clusterware/etc/config.yml",
                                "\n",
                                "  permissions: '0640'",
                                "\n"
                            ]
                        ]
                    }
                }
            }
        },
        "PlacementGroup": {
            "Type": "AWS::EC2::PlacementGroup",
            "Properties": {
                "Strategy": "cluster"
            }
        },
        "FlightCompute": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "DependsOn": "FlightLogin",
                "Properties": {
                "DesiredCapacity": "8",
                "LaunchConfigurationName": {
                    "Ref": "ComputeConfig"
                },
                "PlacementGroup": {
                    "Ref": "PlacementGroup"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join": [ "", [ {"Ref": "AWS::StackName"}, "-compute" ] ]},
                        "PropagateAtLaunch": "true"
                    }
                ],
                "MinSize": "0",
                "MaxSize": "100",
                "VPCZoneIdentifier": [
                    {
                        "Ref": "FlightSubnet"
                    }
                ]
            }
        },
        "ScaleUp10": {
            "Type": "AWS::AutoScaling::ScalingPolicy",
            "Properties": {
                "AdjustmentType": "PercentChangeInCapacity",
                "AutoScalingGroupName": {
                    "Ref": "FlightCompute"
                },
                "Cooldown": "3300",
                "ScalingAdjustment": "10"
            }
        },
        "ScaleUp25": {
            "Type": "AWS::AutoScaling::ScalingPolicy",
            "Properties": {
                "AdjustmentType": "PercentChangeInCapacity",
                "AutoScalingGroupName": {
                    "Ref": "FlightCompute"
                },
                "Cooldown": "3300",
                "ScalingAdjustment": "25"
            }
        },
        "CPUAlarmHigh10": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Scale-up by 10% if currently queued jobs > 50 for 20 minutes",
                "MetricName": "Queued",
                "Namespace": "ALCES/SGE",
                "Statistic": "Average",
                "Period": "60",
                "EvaluationPeriods": "20",
                "Threshold": "90",
                "AlarmActions": [
                    {
                        "Ref": "ScaleUp10"
                    }
                ],
                "Dimensions": [
                    {
                        "Name": "AutoScalingGroupName",
                        "Value": {
                            "Ref": "FlightCompute"
                        }
                    }
                ],
                "ComparisonOperator": "GreaterThanThreshold"
            }
        },
        "CPUAlarmHigh25": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Scale-up by 25% if currently queued jobs > 100 for 20 minutes",
                "MetricName": "Queued",
                "Namespace": "ALCES/SGE",
                "Statistic": "Average",
                "Period": "60",
                "EvaluationPeriods": "20",
                "Threshold": "100",
                "AlarmActions": [
                    {
                        "Ref": "ScaleUp25"
                    }
                ],
                "Dimensions": [
                    {
                        "Name": "AutoScalingGroupName",
                        "Value": {
                            "Ref": "FlightCompute"
                        }
                    }
                ],
                "ComparisonOperator": "GreaterThanThreshold"
            }
        }
    },
    "Outputs": {
        "Username": {
            "Description": "Administrator username used to log in to your environment with. This should be used in conjunction with your selected AWS keypair, together with the provided access IP",
            "Value": {
              "Ref": "Username"
            }
        },
        "AccessIP": {
            "Description": "Public access IP for your Flight Compute environment. Use together with your chosen username to gain SSH access",
            "Value": {
                "Fn::GetAtt": [
                    "FlightLogin",
                    "PublicIp"
                ]
            }
        },
	"Username": {
	    "Description": "Administrator username used to log in to your environment with. This should be used in conjunction with your selected AWS keypair - together with the provided access IP",
	    "Value": {
	        "Ref": "Username"
	    }
	}
    }
}
